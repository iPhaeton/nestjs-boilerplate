version: 2
jobs:
  install-node-packages:
    docker:
      - image: circleci/node:12
    steps:
      - restore-cache:
          keys:
            - source-v1-{{ .Branch }}-{{ .Revision }}
      - checkout
      - run: git gc
      - save-cache:
          key: source-v1-{{ .Branch }}-{{ .Revision }}
          paths:
            - .git
      - restore-cache:
          keys:
            - v1-yarn-cache-{{ checksum "yarn.lock" }}
            - v1-yarn-cache
      - run: yarn install
      - save-cache:
          key: v1-yarn-cache-{{ checksum "yarn.lock" }}
          paths:
            - ./node_modules

  test:
    docker:
      - image: circleci/node:12
      - image: circleci/postgres:11
    steps:
      - restore-cache:
          keys:
            - source-v1-{{ .Branch }}-{{ .Revision }}
      - checkout
      - restore-cache:
          keys:
            - v1-yarn-cache-{{ checksum "yarn.lock" }}
            - v1-yarn-cache
      - run:
          name: Create test database
          command: -u postgres psql -c 'create database auth_db_test;'
      - run: yarn test

  # test-e2e:
  #   docker:
  #     - image: circleci/node:12
  #   steps:
  #     - restore-cache:
  #         keys:
  #           - source-v1-{{ .Branch }}-{{ .Revision }}
  #     - checkout
  #     - restore-cache:
  #         keys:
  #           - v1-yarn-cache-{{ checksum "yarn.lock" }}
  #           - v1-yarn-cache
  #     - run: yarn test:e2e
      
  build:
    machine:
      image: circleci/classic:latest
    steps:
      - restore-cache:
          keys:
            - source-v1-{{ .Branch }}-{{ .Revision }}
      - checkout
      - restore-cache:
          keys:
            - v1-yarn-cache-{{ checksum "yarn.lock" }}
            - v1-yarn-cache
      - run:
          name: Authentication
          command: |
            echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
      - run: 
          name: Build
          command: docker build . -t gcr.io/nestjs-auth-251708/nestjs-boilerplate:$CIRCLE_SHA1
      - run:
          name: Push
          command: gcloud docker -- push gcr.io/nestjs-auth-251708/nestjs-boilerplate:$CIRCLE_SHA1
  
  deploy:
    docker:
      - image: google/cloud-sdk
    steps:
      - restore-cache:
          keys:
            - source-v1-{{ .Branch }}-{{ .Revision }}
      - checkout
      - run:
          name: Authentication
          command: |
            echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
            gcloud container clusters get-credentials nestjs-boilerplate-cluster
      - run:
          name: Install jubectl
          command: apt-get install kubectl
      - run:
          name: Deploy
          command: |
            kubectl patch deployment nestjs-boilerplate -p '{"spec":{"template":{"spec":{"containers":[{"name":"nestjs-boilerplate","image":"gcr.io/nestjs-auth-251708/nestjs-boilerplate:'"$CIRCLE_SHA1"'"}]}}}}'

workflows:
  version: 2
  main:
    jobs:
      - install-node-packages
      - test:
          requires:
            - install-node-packages
      # - test-e2e:
      #     requires:
      #       - install-node-packages
      - build:
          filters:
            branches:
              only:
                - master
          requires:
            - test
            # - test-e2e
            # - install-node-packages
      - deploy:
          filters:
            branches:
              only:
                - master
          requires:
            - build
